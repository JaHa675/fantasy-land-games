<style>
    .gameBtns {
        margin: 0 20px 20px 20px;
    }

    .games {
        width: 100vw;
    }

    #waitingForPlayerModal {
        background-color: rgb(141, 135, 65, .9);
        text-align: center;
    }

    #waitingForPlayerModal p {
        font-size: 30px;
    }

    #waitingForPlayerModal .modal-body {
        padding: 50px;
    }

    @media (max-width: 529px) {

        .gameBtnRow {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: center;
        }

        .gameBtns {
            margin: 15px;
            padding: 30px;
            width: 80vw;
        }

        .friends {
            margin-top: 0;
        }
    }

    @media (max-width: 440px) {
        .gamesPageBtns {
            width: 100px;
        }

    }
</style>
<div id="gamesOuterContainer">
    <header class="header" id="gamesTitle">
        <a href='/games'>
            <h1 class="title" id="gamesTitleH1">Fantasy Land</h1>
        </a>
    </header>
    <div class="nav">
        <a href='/ranks/{{id}}'><button id="ranks" class="btn gamesPageBtns">Ranks</button></a>
        <a href='/profile/{{id}}'><button id="profileBtn" class="btn gamesPageBtns">Profile</button></a>
        <button id="logoutButton" class="btn gamesPageBtns">Log Out</button>
    </div>
    <div class="games">
        <div class="gameBtnRow">
            <button class="gameBtns" data-gameID=1 data-userID={{id}}>Tic Tac Toe</a>
                <button class="gameBtns" data-gameID=2 data-userID={{id}}>Connect Four</a>
        </div>
        <aside class="friends">
            <h3 class="friends-title">Friends:</h3>
            <ul>
                {{#each Friend as |friend|}}
                <li>
                    <img src={{friend.image_url}}
                        style="max-width: 50px; max-height: 50px; min-width: 50px; min-height: 50px" class="rounded">
                    {{friend.user_name}}
                </li>
                {{/each}}
            </ul>
        </aside>
    </div>
</div>
<div>
    <div id="c4Game" class="hide">
        {{>cfour}}
    </div>
    <div id="ticTacToeGame" class="hide">
        {{>tic-tac-toe}}
    </div>
</div>

<div class="modal fade" id="waitingForPlayerModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" id="modal-content">
            <div class="modal-header">
                <button id="waitingForPlayerModalButton" type="button" class="btn-close" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Looking for an opponent...</p>
                <img src="/assets/loadingIcon.gif" alt="loading icon">
            </div>
        </div>
    </div>
</div>

<script>
    function joinGame(e) {
        const data = { gameID: e.target.getAttribute('data-gameID'), userID: e.target.getAttribute('data-userID') };
        currentState.user.userID = data.userID;
        socket.emit('joinGame', data);
    }

    const gamesOuterContainerEl = document.querySelector("#gamesOuterContainer");
    const c4GameEl = document.querySelector("#c4Game");
    const ticTacToeGameEl = document.querySelector("#ticTacToeGame");
    const gameBtnsEl = document.querySelectorAll(".gameBtns");
    const modalEl = document.querySelector("#waitingForPlayerModal");
    const waitingForPlayerModalButtonEl = document.querySelector("#waitingForPlayerModalButton");

    function exitWaitingRoom() {
        waitingForPlayerModalButtonEl.removeEventListener("click", exitWaitingRoom);
        modalEl.classList.remove("show");
        socket.emit("exitWaitingRoom", currentState.game);
    }

    for (let i = 0; i < gameBtnsEl.length; i++) {
        gameBtnsEl[i].addEventListener("click", joinGame);
    }
    socket.on('joinedGame', data => {
        currentState.game = data;
        console.log("joinedGame: ", data);
        if (data.players == 2) {
            waitingForPlayerModalButtonEl.removeEventListener("click", exitWaitingRoom);
            modalEl.classList.remove("show");
            if (data.id == 2) {
                gamesOuterContainerEl.classList.add("hide");
                c4GameEl.classList.remove("hide");
                socket.emit('c4-startGameServer', data);
            } else if (data.id == 1) {
                gamesOuterContainerEl.classList.add("hide");
                ticTacToeGameEl.classList.remove("hide");
                socket.emit('t3-startGameServer', data);
            }
        } else {
            modalEl.classList.add("show");
            waitingForPlayerModalButtonEl.addEventListener("click", exitWaitingRoom);
        }
    });
</script>
<script src="/js/logout.js"></script>
<script src="/js/profile.js"></script>